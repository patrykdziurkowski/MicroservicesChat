services:
  https-proxy:
    image: ${REGISTRY_PATH:-localhost}/mc_http-proxy:latest
    build:
      context: ./src/http-proxy
      dockerfile: Dockerfile
      args:
        CHAT_DOMAIN: ${CHAT_DOMAIN:-localhost}
        CHAT_MODULE_ADDRESS: ${CHAT_MODULE_ADDRESS:-chat:8080}
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - chat
  chat:
    image: ${REGISTRY_PATH:-localhost}/mc_chat:latest
    build:
      context: ./src/chat
      dockerfile: Dockerfile
    environment:
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    depends_on:
      db-chat:
        condition: service_healthy
      auth:
        condition: service_healthy
    networks:
      - shared
      - chat
    volumes:
      - ./src/chat/src/main/resources/templates:/app/src/main/resources/templates
  db-chat:
    image: ${REGISTRY_PATH:-localhost}/mc_db-chat:latest
    build:
      context: ./src/db-chat
      dockerfile: Dockerfile
      args:
        password: ${MSSQL_SA_PASSWORD}
    environment:
      - ACCEPT_EULA=Y
    networks:
      - chat
  auth:
    image: ${REGISTRY_PATH:-localhost}/mc_auth:latest
    build:
      context: ./src/auth
      dockerfile: Dockerfile
    environment:
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      db-auth:
        condition: service_healthy
    networks:
      - auth
      - shared
  db-auth:
    image: ${REGISTRY_PATH:-localhost}/mc_db-auth:latest
    build:
      context: ./src/db-auth
      dockerfile: Dockerfile
      args:
        password: ${MSSQL_SA_PASSWORD}
    environment:
      - ACCEPT_EULA=Y
    networks:
      - auth
volumes:
  caddy_data:
  caddy_config:
networks:
  chat:
    driver: bridge
  auth:
    driver: bridge
  shared:
    driver: bridge
